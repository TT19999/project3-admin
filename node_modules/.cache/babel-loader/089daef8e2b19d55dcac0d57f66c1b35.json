{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\admin\\\\src\\\\components\\\\LeftDrawer.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Menus from \"./Menus\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport Link from \"@material-ui/core/Link\";\nimport * as StringConstant from '../pages/String';\n\nvar drawStyles = function drawStyles(theme) {\n  return {\n    drawerPaper: {\n      width: theme.drawer.width,\n      backgroundColor: \"rgb(33, 33, 33)\",\n      color: \"white\",\n      borderRight: \"0px\",\n      boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 10px, rgba(0, 0, 0, 0.23) 0px 3px 10px\"\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      width: theme.drawer.miniWidth\n    },\n    logo: {\n      cursor: \"pointer\",\n      fontSize: 22,\n      color: \"white\",\n      lineHeight: \"64px\",\n      fontWeight: 300,\n      backgroundColor: theme.palette.primary[500],\n      paddingLeft: 40,\n      height: 64\n    },\n    avatarRoot: {\n      padding: \"16px 0 10px 15px\",\n      backgroundImage: \"url(\" + require(\"../images/material_bg.png\") + \")\",\n      height: 45,\n      display: \"flex\"\n    },\n    avatarRootMini: {\n      padding: \"15px 0 10px 10px\"\n    },\n    avatarIcon: {\n      float: \"left\",\n      display: \"block\",\n      boxShadow: \"0px 0px 0px 8px rgba(0,0,0,0.2)\"\n    },\n    avatarSpan: {\n      paddingTop: 8,\n      paddingLeft: 24,\n      display: \"block\",\n      color: \"white\",\n      fontWeight: 300,\n      textShadow: \"1px 1px #444\"\n    },\n    menuItem: {\n      color: \"white\",\n      fontSize: 14\n    }\n  };\n};\n\nvar LeftDrawer = function LeftDrawer(props) {\n  var navDrawerOpen = props.navDrawerOpen,\n      classes = props.classes;\n\n  var drawerContent = function drawerContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.logo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/admin/home\",\n      variant: \"h5\",\n      color: \"inherit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Admin Trips\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(classes.avatarRoot, !navDrawerOpen && classes.avatarRootMini),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      component: RouterLink,\n      src: StringConstant.IMAGE_PATH + localStorage.getItem(\"admin_avatar\"),\n      to: \"/admin/home/changepass\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        paddingLeft: 30\n      },\n      className: classes.name,\n      color: \"white\",\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Admin\")), /*#__PURE__*/React.createElement(Menus, {\n      menus: props.menus,\n      navDrawerOpen: navDrawerOpen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    open: navDrawerOpen,\n    variant: \"permanent\",\n    classes: {\n      paper: classNames(classes.drawerPaper, !navDrawerOpen && classes.drawerPaperClose)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, drawerContent())));\n};\n\nLeftDrawer.propTypes = {\n  navDrawerOpen: PropTypes.bool,\n  menus: PropTypes.array,\n  username: PropTypes.string,\n  classes: PropTypes.object,\n  theme: PropTypes.object,\n  handleChangeNavDrawer: PropTypes.func\n};\nexport default withStyles(drawStyles, {\n  withTheme: true\n})(LeftDrawer);","map":{"version":3,"sources":["F:/xampp/htdocs/BtlCNWeb/admin/src/components/LeftDrawer.js"],"names":["React","PropTypes","classNames","Drawer","Hidden","Avatar","withStyles","Menus","Link","RouterLink","Typography","StringConstant","drawStyles","theme","drawerPaper","width","drawer","backgroundColor","color","borderRight","boxShadow","drawerPaperClose","overflowX","transition","transitions","create","easing","sharp","duration","leavingScreen","miniWidth","logo","cursor","fontSize","lineHeight","fontWeight","palette","primary","paddingLeft","height","avatarRoot","padding","backgroundImage","require","display","avatarRootMini","avatarIcon","float","avatarSpan","paddingTop","textShadow","menuItem","LeftDrawer","props","navDrawerOpen","classes","drawerContent","avatar","IMAGE_PATH","localStorage","getItem","name","menus","paper","propTypes","bool","array","username","string","object","handleChangeNavDrawer","func","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Menus from \"./Menus\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport * as StringConstant from '../pages/String';\r\n\r\nconst drawStyles = theme => {\r\n  return {\r\n    drawerPaper: {\r\n      width: theme.drawer.width,\r\n      backgroundColor: \"rgb(33, 33, 33)\",\r\n      color: \"white\",\r\n      borderRight: \"0px\",\r\n      boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 10px, rgba(0, 0, 0, 0.23) 0px 3px 10px\"\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: \"hidden\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      width: theme.drawer.miniWidth\r\n    },\r\n    logo: {\r\n      cursor: \"pointer\",\r\n      fontSize: 22,\r\n      color: \"white\",\r\n      lineHeight: \"64px\",\r\n      fontWeight: 300,\r\n      backgroundColor: theme.palette.primary[500],\r\n      paddingLeft: 40,\r\n      height: 64\r\n    },\r\n    avatarRoot: {\r\n      padding: \"16px 0 10px 15px\",\r\n      backgroundImage: \"url(\" + require(\"../images/material_bg.png\") + \")\",\r\n      height: 45,\r\n      display: \"flex\"\r\n    },\r\n    avatarRootMini: {\r\n      padding: \"15px 0 10px 10px\"\r\n    },\r\n    avatarIcon: {\r\n      float: \"left\",\r\n      display: \"block\",\r\n      boxShadow: \"0px 0px 0px 8px rgba(0,0,0,0.2)\"\r\n    },\r\n    avatarSpan: {\r\n      paddingTop: 8,\r\n      paddingLeft: 24,\r\n      display: \"block\",\r\n      color: \"white\",\r\n      fontWeight: 300,\r\n      textShadow: \"1px 1px #444\"\r\n    },\r\n    menuItem: {\r\n      color: \"white\",\r\n      fontSize: 14\r\n    }\r\n  };\r\n};\r\n\r\nconst LeftDrawer = props => {\r\n  let { navDrawerOpen, classes } = props;\r\n\r\n  const drawerContent = () => (\r\n    <div>\r\n      <div className={classes.logo}>\r\n        <Link\r\n        href=\"/admin/home\"  \r\n        variant=\"h5\"\r\n        color=\"inherit\"\r\n        \r\n      >\r\n        Admin Trips\r\n      </Link>\r\n      </div>\r\n      <div className={classNames(classes.avatarRoot, !navDrawerOpen && classes.avatarRootMini)}>\r\n\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={StringConstant.IMAGE_PATH + localStorage.getItem(\"admin_avatar\")}\r\n          to=\"/admin/home/changepass\"\r\n        />\r\n        <Typography\r\n          style ={{paddingLeft:30}}\r\n          className={classes.name}\r\n          color=\"white\"\r\n          variant=\"h6\"\r\n        >\r\n          {/* {localStorage.getItem(\"admin_name\")} */}\r\n          Admin\r\n        </Typography>\r\n        {/* <span className={classes.avatarSpan}>{localStorage.getItem(\"user_name\")}</span> */}\r\n      \r\n      </div>\r\n      <Menus menus={props.menus} navDrawerOpen={navDrawerOpen} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* Mobile screen */}\r\n      {/* <Hidden mdUp>\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n          open={navDrawerOpen}\r\n          onClose={handleChangeNavDrawer}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true // Better open performance on mobile.\r\n          }}\r\n        > */}\r\n          {/* should close drawer modal as well when click on menu */}\r\n          {/* {drawerContent(handleChangeNavDrawer)}\r\n        </Drawer>\r\n      </Hidden> */}\r\n\r\n      {/* Desktop screen */}\r\n      <Hidden smDown>\r\n        <Drawer\r\n          open={navDrawerOpen}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, !navDrawerOpen && classes.drawerPaperClose)\r\n          }}\r\n        >\r\n          {drawerContent()}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nLeftDrawer.propTypes = {\r\n  navDrawerOpen: PropTypes.bool,\r\n  menus: PropTypes.array,\r\n  username: PropTypes.string,\r\n  classes: PropTypes.object,\r\n  theme: PropTypes.object,\r\n  handleChangeNavDrawer: PropTypes.func\r\n};\r\n\r\nexport default withStyles(drawStyles, { withTheme: true })(LeftDrawer);\r\n"]},"metadata":{},"sourceType":"module"}