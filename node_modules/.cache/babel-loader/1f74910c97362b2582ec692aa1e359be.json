{"ast":null,"code":"import _defineProperty from \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\Admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\Admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\Admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\Admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\Admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\Admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\BtlCNWeb\\\\Admin\\\\src\\\\pages\\\\Profile.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, TextField, makeStyles, Container } from '@material-ui/core';\nimport axios from 'axios';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }));\n});\n\nvar Profile = /*#__PURE__*/function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleUpdatePass = function () {\n      if (_this.state.passchanged === _this.state.confirm) {\n        axios({\n          method: 'POST',\n          url: 'https://mighty-retreat-21374.herokuapp.com/api/reset-password?token=' + localStorage.getItem(\"token\"),\n          data: {\n            new_password: _this.state.passchanged,\n            old_password: _this.state.password\n          }\n        }).then(function (response) {\n          _this.setState({\n            success_message: response.data.message,\n            success: true\n          });\n\n          console.log(response.data.message);\n          console.log(_this.state.success_message);\n        }).catch(function (error) {\n          _this.setState({\n            success_message: error.response.data.message,\n            success: true\n          }); // handle error\n\n\n          console.log(error);\n        });\n      } else {\n        _this.setState({\n          open: true\n        });\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleSuccessClose = function () {\n      _this.setState({\n        success: false\n      });\n\n      window.location.reload();\n    };\n\n    _this.state = {\n      password: '',\n      passchanged: '',\n      confirm: '',\n      not_match: true,\n      open: false,\n      success: false,\n      success_message: \"\"\n    };\n    return _this;\n  } // classes = useStyles();\n\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Container, {\n        maxWidth: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        mt: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        title: \"Change Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Password\",\n        margin: \"normal\",\n        name: \"password\",\n        onChange: this.onChange,\n        type: \"password\",\n        value: this.state.password,\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        label: \"New password\",\n        margin: \"normal\",\n        name: \"passchanged\",\n        onChange: this.onChange,\n        type: \"password\",\n        value: this.state.passchanged,\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Confirm password\",\n        margin: \"normal\",\n        name: \"confirm\",\n        onChange: this.onChange,\n        type: \"password\",\n        value: this.state.confirm,\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Box, {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: this.handleUpdatePass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"Update\"))))), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-slide-title\",\n        \"aria-describedby\": \"alert-dialog-slide-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, \"Submit Failed!\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        id: \"alert-dialog-slide-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, \"Confirm password doesn't match\")), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, \"OK\"))), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.success,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: this.handleSuccessClose,\n        \"aria-labelledby\": \"alert-dialog-slide-title\",\n        \"aria-describedby\": \"alert-dialog-slide-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, \"Request has sent!\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        id: \"alert-dialog-slide-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, this.state.success_message)), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleSuccessClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, \"OK\"))));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\n;\nProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default Profile;","map":{"version":3,"sources":["F:/xampp/htdocs/BtlCNWeb/Admin/src/pages/Profile.js"],"names":["React","PropTypes","Box","Button","Card","CardContent","CardHeader","Divider","TextField","makeStyles","Container","axios","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Transition","forwardRef","props","ref","Profile","onChange","event","setState","target","name","value","handleUpdatePass","state","passchanged","confirm","method","url","localStorage","getItem","data","new_password","old_password","password","then","response","success_message","message","success","console","log","catch","error","open","handleClose","handleSuccessClose","window","location","reload","not_match","Component","propTypes","className","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  Container\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            passchanged: '',\r\n            confirm: '',\r\n            not_match: true,\r\n            open: false,\r\n            success: false,\r\n            success_message: \"\"\r\n        }\r\n    }\r\n    // classes = useStyles();\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    handleUpdatePass = () =>{  \r\n        if(this.state.passchanged===this.state.confirm){\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://mighty-retreat-21374.herokuapp.com/api/reset-password?token='+localStorage.getItem(\"token\"),\r\n                data: {\r\n                    new_password: this.state.passchanged,\r\n                    old_password: this.state.password\r\n                }\r\n            }).then((response) => {\r\n                this.setState({\r\n                    success_message: response.data.message,\r\n                    success: true\r\n                });\r\n                console.log(response.data.message)\r\n                console.log(this.state.success_message)\r\n                \r\n                \r\n            }).catch((error) => {\r\n                this.setState({\r\n                    success_message: error.response.data.message,\r\n                    success: true\r\n                });\r\n                // handle error\r\n                console.log(error);\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                open: true\r\n            })\r\n        }\r\n\r\n    }\r\n    handleClose = () =>{\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n    handleSuccessClose = () => {\r\n        this.setState({\r\n            success:false\r\n        });\r\n        window.location.reload();\r\n    }\r\n    render(){\r\n\r\n        return (\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Box mt={3}>\r\n        <form\r\n            >\r\n            <Card>\r\n                <CardHeader\r\n                title=\"Change Password\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    margin=\"normal\"\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"New password\"\r\n                    margin=\"normal\"\r\n                    name=\"passchanged\"\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    value={this.state.passchanged}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Confirm password\"\r\n                    margin=\"normal\"\r\n                    name=\"confirm\"\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    value={this.state.confirm}\r\n                    variant=\"outlined\"\r\n                />\r\n                </CardContent>\r\n                <Divider />\r\n                <Box\r\n                display=\"flex\"\r\n                justifyContent=\"flex-end\"\r\n                p={2}\r\n                >\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.handleUpdatePass}\r\n                >\r\n                    Update\r\n                </Button>\r\n                </Box>\r\n            </Card>\r\n            </form>\r\n        </Box>\r\n        <Dialog\r\n            open={this.state.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Submit Failed!\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Confirm password doesn't match\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n        <Dialog\r\n            open={this.state.success}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={this.handleSuccessClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Request has sent!\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {this.state.success_message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleSuccessClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n        \r\n        \r\n            \r\n        );\r\n    }\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}